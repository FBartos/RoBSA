on:
  push:
    branches:
      - main
      - master
      - pre-release
  pull_request:
    branches:
      - main
      - master
      - pre-release

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
        #  - {os: macOS-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,   r: 'release'}
        #  - {os: ubuntu-latest,   r: 'oldrel-1'}

    env:
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: false
      NOT_CRAN: true

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-3-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-3-

      - name: Set path for RTools 4.0
        if: runner.os == 'Windows'
        run: echo "C:/rtools40/usr/bin;C:/rtools40/mingw64/bin" | Out-File -Append -FilePath $env:GITHUB_PATH -Encoding utf8
      
      - name: Install most Windows system dependencies
        if: runner.os == 'Windows'
        run: |
          pacman -Syu mingw-w64-x86_64-make --noconfirm
          g++ --version
          Get-Command g++ | Select-Object -ExpandProperty Definition
          mingw32-make --version
          Get-Command mingw32-make | Select-Object -ExpandProperty Definition
          (New-Object System.Net.WebClient).DownloadFile('https://sourceforge.net/projects/mcmc-jags/files/JAGS/4.x/Windows/JAGS-4.3.1.exe', 'C:\JAGS-4.3.1.exe')
        shell: powershell

      - name: Install JAGS on Windows
        if: runner.os == 'Windows'
        run: C:\JAGS-4.3.1.exe /S
        shell: cmd

      - name: Install Linux system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          sudo apt-get install -y libglpk-dev
          Rscript -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"
          sudo -s apt-get install jags
          sudo -s apt-get install libv8-dev
          sudo -s apt-get install libnode-dev
          sudo -s apt-get install libcurl4-openssl-dev

      - name: Install Mac system dependencies
        if: runner.os == 'macOS'
        run: |
          brew install jags
          brew install libgit2
          
      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE, type = ifelse(tolower(Sys.info()["sysname"]) == "linux", "source", "binary"))
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}

      - name: Check
        if: runner.os != 'Windows'
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: |
          rcmdcheck::rcmdcheck(
            args        = c("--no-manual", "--as-cran", "--ignore-vignettes"),
            build_args  = c("--no-build-vignettes"),
            error_on    = "warning",
            check_dir   = "check")
        shell: Rscript {0}"

      - name: Check
        if: runner.os == 'Windows'
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
          JAGS_ROOT: "/c/progra~1/JAGS/JAGS-4.3.1"
          JAGS_MAJOR_VERSION: 4
        run: |
          rcmdcheck::rcmdcheck(
            args        = c("--no-manual", "--as-cran", "--ignore-vignettes"),
            build_args  = c("--no-build-vignettes"),
            error_on    = "warning",
            check_dir   = "check")
        shell: Rscript {0}"

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
